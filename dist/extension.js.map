{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,uGCnBf,eAIA,oBAAyBQ,GAIxBC,QAAQC,IAAI,kEAKZ,IAAIC,EAAaC,EAAOC,SAASC,gBAAgB,4BAA4B,KAG5EF,EAAOG,OAAOC,uBAAuB,sCAGnBJ,EAAOC,SAASC,gBAAgB,8BAA+BG,IAExDL,EAAOG,OAAOG,iBACpBC,YAAc,qBAIjC,MAAMC,EAAS,IAAIR,EAAOS,cAC1B,QAA0Cf,IAAtCM,EAAOU,UAAUC,iBAEpB,YADAX,EAAOG,OAAOC,uBAAuB,2DAGtC,MAAMQ,EAASZ,EAAOU,UAAUC,iBAAiB,GAAGN,IAAIQ,OAClDC,EAAWd,EAAOe,IAAIC,KAAKJ,EAAS,sBAEpCK,EAAiBjB,EAAOe,IAAIC,KAAKJ,EAAS,sBAC1CM,EAAiBlB,EAAOe,IAAIC,KAAKJ,EAAS,mBAIhDZ,EAAOG,OAAOC,uBAAuB,oBAErCI,EAAOW,WAAWL,EAAU,CAAEM,gBAAgB,IAC9CZ,EAAOW,WAAWF,EAAgB,CAAEG,gBAAgB,IACpDZ,EAAOW,WAAWD,EAAgB,CAAEE,gBAAgB,IAOpDpB,EAAOU,UAAUW,UAAUb,GAC3BX,QAAQC,IAAI,gBALJ,IAAIwB,SAASC,IACnBC,WAAWD,EAOP,SACN1B,QAAQC,IAAI,cAgCZE,EAAOG,OAAOC,uBAAuB,4BAKtCR,EAAQ6B,cAAcC,KAAK3B,IAI5B,2B","sources":["webpack://qbcore-helper/external commonjs \"vscode\"","webpack://qbcore-helper/webpack/bootstrap","webpack://qbcore-helper/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\t\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"qbcore-helper\" is now active!');\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tlet disposable = vscode.commands.registerCommand('qbcore-helper.helloWorld', () => {\n\t\t// The code you place here will be executed every time your command is executed\n\t\t// Display a message box to the user\n\t\tvscode.window.showInformationMessage('Hello World from qbcore-helper!');\n\t});\n\n\tlet createPlugin = vscode.commands.registerCommand('qbcore-helper.CreatePlugin', (uri: vscode.Uri) => {\n\t\t// Get the name of the plugin.\n\t\tlet pluginNameInputBox = vscode.window.createInputBox();\n\t\tpluginNameInputBox.placeholder = \"QBCore Plugin Name\";\n\t\t\n\t\t// const pluginName = vscode.window.showInputBox(pluginNameInputBox);\n\n\t\tconst wsedit = new vscode.WorkspaceEdit();\n\t\tif (vscode.workspace.workspaceFolders === undefined) {\n\t\t\tvscode.window.showInformationMessage('You have to have at least one active vscode workspaces!');\n\t\t\treturn;\n\t\t}\n\t\tconst wsPath = vscode.workspace.workspaceFolders[0].uri.fsPath; // gets the path of the first workspace folder\n\t\tconst filePath = vscode.Uri.file(wsPath + '/client/client.lua');\n\t\t\n\t\tconst serverFilePath = vscode.Uri.file(wsPath + \"/server/server.lua\");\n\t\tconst fxManifestPath = vscode.Uri.file(wsPath + \"/fxmanifest.lua\");\n\t\t\n\t\tconst fxManifestContent = `fx_version 'cerulean'\\ngame 'gta5'\\n\\nauthor ''\\ndescription ''\\nversion '1.0.0'\\n\\nclient_script 'client/client.lua'\\nserver_script 'server/server.lua'\\n\\nshared_scripts {\\n\\t'@qb-core/import.lua'\\n}`; \n\n\t\tvscode.window.showInformationMessage(\"Creating Files..\");\n\t\t\n\t\twsedit.createFile(filePath, { ignoreIfExists: true });\n\t\twsedit.createFile(serverFilePath, { ignoreIfExists: true });\n\t\twsedit.createFile(fxManifestPath, { ignoreIfExists: true });\n\n\t\tfunction sleep(ms : number) {\n\t\t\treturn new Promise((resolve) => {\n\t\t\t\tsetTimeout(resolve, ms);\n\t\t\t});\n\t\t}\n\t\tvscode.workspace.applyEdit(wsedit);\n\t\tconsole.log('Applied Edit');\n\t\t\n\t\t// Write to fx manifest.\n\t\tsleep(1200);\n\t\tconsole.log('Working...');\n\n\t\t// vscode.workspace.openTextDocument(fxManifestPath).then((a: vscode.TextDocument) => {\n\t\t// \tvscode.window.showTextDocument(a, 1, false).then(e => {\n\t\t// \t\te.edit(edit => {\n\t\t// \t\t\tedit.insert(new vscode.Position(0, 0), fxManifestContent);\n\t\t// \t\t});\n\t\t// \t});\n\t\t// }, (error: any) => {\n\t\t// \tconsole.error(error);\n\t\t// });\n\n\t\t// vscode.workspace.openTextDocument(serverFilePath).then((a: vscode.TextDocument) => {\n\t\t// \tvscode.window.showTextDocument(a, 1, false).then(e => {\n\t\t// \t\te.edit(edit => {\n\t\t// \t\t\tedit.insert(new vscode.Position(0, 0), (`-- Main Server Script.\\n-- local QBCore = exports['qb-core']:GetCoreObject()`));\n\t\t// \t\t});\n\t\t// \t});\n\t\t// }, (error: any) => {\n\t\t// \tconsole.error(error);\n\t\t// });\n\n\t\t// vscode.workspace.openTextDocument(filePath).then((a: vscode.TextDocument) => {\n\t\t// \tvscode.window.showTextDocument(a, 1, false).then(e => {\n\t\t// \t\te.edit(edit => {\n\t\t// \t\t\tedit.insert(new vscode.Position(0, 0), (`-- Main Client Script.\\n-- local QBCore = exports['qb-core']:GetCoreObject()`));\n\t\t// \t\t});\n\t\t// \t});\n\t\t// }, (error: any) => {\n\t\t// \tconsole.error(error);\n\t\t// });\n\n\t\tvscode.window.showInformationMessage('Created QBCore Plugin');\n\t});\n\n\n\n\tcontext.subscriptions.push(disposable);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","console","log","disposable","vscode","commands","registerCommand","window","showInformationMessage","uri","createInputBox","placeholder","wsedit","WorkspaceEdit","workspace","workspaceFolders","wsPath","fsPath","filePath","Uri","file","serverFilePath","fxManifestPath","createFile","ignoreIfExists","applyEdit","Promise","resolve","setTimeout","subscriptions","push"],"sourceRoot":""}